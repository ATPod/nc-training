-- MySQL Script generated by MySQL Workbench
-- 03/28/17 21:33:28
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema NA_DevelopersTeam
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `NA_DevelopersTeam` ;

-- -----------------------------------------------------
-- Schema NA_DevelopersTeam
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `NA_DevelopersTeam` DEFAULT CHARACTER SET utf8 ;
USE `NA_DevelopersTeam` ;

-- -----------------------------------------------------
-- Table `NA_DevelopersTeam`.`CUSTOMER`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `NA_DevelopersTeam`.`CUSTOMER` ;

CREATE TABLE IF NOT EXISTS `NA_DevelopersTeam`.`CUSTOMER` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NA_DevelopersTeam`.`MANAGER`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `NA_DevelopersTeam`.`MANAGER` ;

CREATE TABLE IF NOT EXISTS `NA_DevelopersTeam`.`MANAGER` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NA_DevelopersTeam`.`TERMS_OF_REFERENCE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `NA_DevelopersTeam`.`TERMS_OF_REFERENCE` ;

CREATE TABLE IF NOT EXISTS `NA_DevelopersTeam`.`TERMS_OF_REFERENCE` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `customer_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_TERMS_OF_REFERENCE_CUSTOMER1_idx` (`customer_id` ASC),
  CONSTRAINT `fk_TERMS_OF_REFERENCE_CUSTOMER1`
    FOREIGN KEY (`customer_id`)
    REFERENCES `NA_DevelopersTeam`.`CUSTOMER` (`id`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NA_DevelopersTeam`.`TASK`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `NA_DevelopersTeam`.`TASK` ;

CREATE TABLE IF NOT EXISTS `NA_DevelopersTeam`.`TASK` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `terms_of_reference_id` INT NOT NULL,
  `specification` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_TASK_TERMS_OF_REFERENCE_idx` (`terms_of_reference_id` ASC),
  CONSTRAINT `fk_TASK_TERMS_OF_REFERENCE`
    FOREIGN KEY (`terms_of_reference_id`)
    REFERENCES `NA_DevelopersTeam`.`TERMS_OF_REFERENCE` (`id`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NA_DevelopersTeam`.`PROJECT`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `NA_DevelopersTeam`.`PROJECT` ;

CREATE TABLE IF NOT EXISTS `NA_DevelopersTeam`.`PROJECT` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `terms_of_reference_id` INT UNSIGNED NOT NULL,
  `manager_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_PROJECT_TERMS_OF_REFERENCE1_idx` (`terms_of_reference_id` ASC),
  INDEX `fk_PROJECT_MANAGER_idx` (`manager_id` ASC),
  CONSTRAINT `fk_PROJECT_TERMS_OF_REFERENCE1`
    FOREIGN KEY (`terms_of_reference_id`)
    REFERENCES `NA_DevelopersTeam`.`TERMS_OF_REFERENCE` (`id`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT `fk_PROJECT_MANAGER`
    FOREIGN KEY (`manager_id`)
    REFERENCES `NA_DevelopersTeam`.`MANAGER` (`id`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NA_DevelopersTeam`.`QUALIFICATION`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `NA_DevelopersTeam`.`QUALIFICATION` ;

CREATE TABLE IF NOT EXISTS `NA_DevelopersTeam`.`QUALIFICATION` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NA_DevelopersTeam`.`DEVELOPER`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `NA_DevelopersTeam`.`DEVELOPER` ;

CREATE TABLE IF NOT EXISTS `NA_DevelopersTeam`.`DEVELOPER` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `project_id` INT NULL,
  `qualification_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_DEVELOPER_PROJECT_idx` (`project_id` ASC),
  INDEX `fk_DEVELOPER_QUALIFICATION_idx` (`qualification_id` ASC),
  CONSTRAINT `fk_DEVELOPER_PROJECT`
    FOREIGN KEY (`project_id`)
    REFERENCES `NA_DevelopersTeam`.`PROJECT` (`id`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT `fk_DEVELOPER_QUALIFICATION`
    FOREIGN KEY (`qualification_id`)
    REFERENCES `NA_DevelopersTeam`.`QUALIFICATION` (`id`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NA_DevelopersTeam`.`TIMESHEET`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `NA_DevelopersTeam`.`TIMESHEET` ;

CREATE TABLE IF NOT EXISTS `NA_DevelopersTeam`.`TIMESHEET` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `date` DATE NOT NULL,
  `project_id` INT NOT NULL,
  `developer_id` INT NOT NULL,
  `time` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_TIMESHEET_PROJECT1_idx` (`project_id` ASC),
  INDEX `fk_TIMESHEET_DEVELOPER_idx` (`developer_id` ASC),
  CONSTRAINT `fk_TIMESHEET_PROJECT`
    FOREIGN KEY (`project_id`)
    REFERENCES `NA_DevelopersTeam`.`PROJECT` (`id`)
    ON DELETE NO ACTION
    ON UPDATE RESTRICT,
  CONSTRAINT `fk_TIMESHEET_DEVELOPER`
    FOREIGN KEY (`developer_id`)
    REFERENCES `NA_DevelopersTeam`.`DEVELOPER` (`id`)
    ON DELETE NO ACTION
    ON UPDATE RESTRICT)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NA_DevelopersTeam`.`INVOICE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `NA_DevelopersTeam`.`INVOICE` ;

CREATE TABLE IF NOT EXISTS `NA_DevelopersTeam`.`INVOICE` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `project_id` INT NOT NULL,
  `price` DOUBLE NOT NULL,
  `paid` TINYINT(1) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_INVOICE_PROJECT_idx` (`project_id` ASC),
  CONSTRAINT `fk_INVOICE_PROJECT`
    FOREIGN KEY (`project_id`)
    REFERENCES `NA_DevelopersTeam`.`PROJECT` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NA_DevelopersTeam`.`TASK_QUOTA`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `NA_DevelopersTeam`.`TASK_QUOTA` ;

CREATE TABLE IF NOT EXISTS `NA_DevelopersTeam`.`TASK_QUOTA` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `developers_number` INT NOT NULL,
  `qualification_id` INT NOT NULL,
  `task_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_TASK_QUOTA_TASK_idx` (`task_id` ASC),
  INDEX `fk_TASK_QUOTA_QUALIFICATION_idx` (`qualification_id` ASC),
  CONSTRAINT `fk_TASK_QUOTA_TASK`
    FOREIGN KEY (`task_id`)
    REFERENCES `NA_DevelopersTeam`.`TASK` (`id`)
    ON DELETE NO ACTION
    ON UPDATE RESTRICT,
  CONSTRAINT `fk_TASK_QUOTA_QUALIFICATION`
    FOREIGN KEY (`qualification_id`)
    REFERENCES `NA_DevelopersTeam`.`QUALIFICATION` (`id`)
    ON DELETE NO ACTION
    ON UPDATE RESTRICT)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
